{
  "openapi": "3.0.3",
  "info": {
    "title": "RSSwiper",
    "version": "1.0",
    "description": "RSSwiper is a simple RSS reader that allows you to read your favorite newsfeeds in a swipeable interface. It is available as a web app. \n\nTo ensure that all team members are on the same page and that the development follows a common thread, this documentation of the RSSwiper server has been created according to the OpenAPI standard.\n\nFor more information about RSSwiper, visit the [GitLab repository](https://git.mylab.th-luebeck.de/vwprg/wise23_24/b2)."
  },
  "tags": [
    {
      "name": "user",
      "description": "Your account"
    },
    {
      "name": "settings",
      "description": "Your Settings"
    },
    {
      "name": "feed",
      "description": "Your Newsfeeds"
    },
    {
      "name": "article",
      "description": "The Articles of your feeds"
    },
    {
      "name": "readinglist",
      "description": "Your Readinglist"
    },
    {
      "name": "starred",
      "description": "Your Starred Articles"
    },
    {
      "name": "category",
      "description": "The Categories of the articles"
    },
    {
      "name": "statistics",
      "description": "Statistics about your usage"
    },
    {
      "name": "system",
      "description": "System informations"
    }
  ],
  "servers": [
    {
      "url": "{protocol}://{host}:{port}/{endpoint}",
      "description": "Development server",
      "variables": {
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http"
        },
        "host": {
          "default": "localhost"
        },
        "port": {
          "default": "8080"
        },
        "endpoint": {
          "default": "v1"
        }
      }
    },
    {
      "url": "https://backend.rsswipe.mcloud.digital/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "description": "Login to your account",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "Register a new user",
        "tags": [
          "user"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "409": {
            "description": "User with that email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Get your user data",
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "description": "Update your user data",
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "description": "Delete your account",
        "tags": [
          "user"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDeleteInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "description": "Get your settings",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettings"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "description": "Update your settings",
        "tags": [
          "settings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User settings updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/feeds": {
      "post": {
        "description": "Create a new feed",
        "tags": [
          "feed"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feed created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feed"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "get": {
        "description": "Get all your feeds",
        "tags": [
          "feed"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All your feeds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Feed"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/feeds/{id}": {
      "get": {
        "description": "Get a feed by id",
        "tags": [
          "feed"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the feed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The feed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feed"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "description": "Update a feed",
        "tags": [
          "feed"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the feed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeedInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feed updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feed"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "description": "Delete a feed",
        "tags": [
          "feed"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the feed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feed deleted"
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/articles": {
      "get": {
        "description": "Get the newest unseen articles of your feeds",
        "tags": [
          "article"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of articles to return",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1
            }
          },
          {
            "name": "feeds",
            "in": "query",
            "description": "The ids of the feeds to return articles from. If not set, articles from all feeds are returned",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "The ids of the categories to return articles from. If not set, articles from all categories are returned",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The date from which (startDate included) articles should be returned. If not set, articles from all dates are returned",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The date until which (endDate excluded) articles should be returned. If not set, articles from all dates are returned",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The newest unseen articles of all or selected feeds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "description": "Get an article by id",
        "tags": [
          "article"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the article",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "description": "Mark an article as seen or read",
        "tags": [
          "article"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArticleInput"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the article",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article marked successfully"
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/articles/{id}/content": {
      "get": {
        "description": "Get the content of an article",
        "tags": [
          "article"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the article",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The content of the article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleContent"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/readinglist": {
      "get": {
        "description": "Get all articles in your readinglist",
        "tags": [
          "readinglist"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All articles in your readinglist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "description": "Clear your readinglist",
        "tags": [
          "readinglist"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "onlyRead": {
                    "type": "boolean",
                    "description": "If set to true, only read articles will be cleared"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Readinglist cleared"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/readinglist/articles": {
      "post": {
        "description": "Add an article to your readinglist",
        "tags": [
          "readinglist"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The id of the article"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article added to readinglist"
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "description": "Remove an article from your readinglist",
        "tags": [
          "readinglist"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The id of the article"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article removed from readinglist"
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/starred": {
      "get": {
        "description": "Get all your starred articles",
        "tags": [
          "starred"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All your starred articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/starred/articles": {
      "post": {
        "description": "Star an article",
        "tags": [
          "starred"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the article"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article starred"
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "description": "Unstar an article",
        "tags": [
          "starred"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The id of the article"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article unstarred"
          },
          "400": {
            "$ref": "#/components/responses/InvalidInputError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "description": "Get all possible categories",
        "tags": [
          "category"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All possible categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statistics/recent": {
      "get": {
        "description": "Get statistics about your usage for articles since the maximum article age",
        "tags": [
          "statistics"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics about your usage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentStatistics"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/system": {
      "get": {
        "description": "Get system informations",
        "tags": [
          "system"
        ],
        "responses": {
          "200": {
            "description": "System informations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInformation"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SystemInformation": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "uptime": {
            "description": "Uptime in seconds",
            "type": "integer"
          },
          "status": {
            "enum": [
              "development",
              "production"
            ],
            "type": "string"
          },
          "feedUpdateInterval": {
            "description": "Feed update interval in miliseconds",
            "type": "integer"
          },
          "garbageCollectionInterval": {
            "description": "Garbage collection interval in miliseconds",
            "type": "integer"
          },
          "maxArticleAge": {
            "description": "Maximum age of an article in miliseconds",
            "type": "integer"
          }
        }
      },
      "RecentStatistics": {
        "type": "object",
        "properties": {
          "dateSince": {
            "type": "string",
            "format": "date-time"
          },
          "totalSeen": {
            "type": "integer"
          },
          "totalRead": {
            "type": "integer"
          },
          "totalStarred": {
            "type": "integer"
          },
          "totalSaved": {
            "type": "integer"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "seen": {
                  "type": "integer"
                },
                "read": {
                  "type": "integer"
                },
                "starred": {
                  "type": "integer"
                },
                "saved": {
                  "type": "integer"
                }
              }
            }
          },
          "feeds": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "faviconUrl": {
                  "type": "string"
                },
                "read": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "username",
          "email"
        ]
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          }
        }
      },
      "UserDeleteInput": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "UserRegisterInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "UserLoginInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateFeedInput": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "openInApp": {
            "type": "boolean"
          }
        },
        "required": [
          "title",
          "link"
        ]
      },
      "UpdateFeedInput": {
        "type": "object",
        "properties": {
          "openInApp": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ]
      },
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "title": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "format": "uri"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "read": {
            "type": "boolean"
          },
          "seen": {
            "type": "boolean"
          },
          "feed": {
            "$ref": "#/components/schemas/Feed"
          }
        }
      },
      "UpdateArticleInput": {
        "type": "object",
        "properties": {
          "read": {
            "type": "boolean"
          },
          "seen": {
            "type": "boolean"
          },
          "starred": {
            "type": "boolean"
          },
          "saved": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ]
      },
      "ArticleContent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "article title"
          },
          "content": {
            "type": "string",
            "description": "HTML string of processed article content"
          },
          "textContent": {
            "type": "string",
            "description": "text content of the article, with all the HTML tags removed"
          },
          "length": {
            "type": "integer",
            "description": "length of an article, in characters"
          },
          "excerpt": {
            "type": "string",
            "description": "article description, or short excerpt from the content"
          },
          "byline": {
            "type": "string",
            "description": "author metadata"
          },
          "dir": {
            "type": "string",
            "description": "content direction"
          },
          "siteName": {
            "type": "string",
            "description": "name of the site"
          },
          "lang": {
            "type": "string",
            "description": "content language"
          },
          "errormessage": {
            "type": "string",
            "description": "the error message if there was an error parsing the feed"
          },
          "error_count": {
            "type": "number",
            "description": "the number of times the parsing of the feed failed since the last success"
          }
        }
      },
      "UserSettings": {
        "type": "object",
        "properties": {
          "expTimeRead": {
            "type": "number"
          },
          "expTimeUnread": {
            "type": "number"
          }
        }
      },
      "Feed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "link": {
            "type": "string",
            "format": "uri"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "faviconUrl": {
            "type": "string",
            "format": "uri"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "openInApp": {
            "type": "boolean"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      },
      "InvalidInputError": {
        "description": "Invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}